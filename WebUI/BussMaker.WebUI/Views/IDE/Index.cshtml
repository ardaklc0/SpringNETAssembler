@model DataTransferObjectViewModel
<head>
    <link href="~/lib/codemirror/codemirror.css" rel="stylesheet" />
    <script src="~/lib/codemirror/codemirror.js"></script>
    <script src="~/lib/codemirror/mode/clike/clike.js"></script>
    <link href="~/lib/codemirror/theme/dracula.css" rel="stylesheet" />
    <style>
        h4{
            color: #fff;
        }
    </style>
</head>
    @{
        string createDto = "CreateNew" + ViewBag.Title + "Request";
        string updateDto = "UpdateExisting" + ViewBag.Title + "Request";
        string getDto = "Get" + ViewBag.Title + "DisplayResponse";
        string interfaceService = "I" + ViewBag.Title + "Service";
        string service = ViewBag.Title + "Service";
        string interfaceRepositoryEntity = "I" + ViewBag.Title + "Repository";
        string repository = "EF" + ViewBag.Title + "Repository";
        string interfaceRepository = "IRepository<T>";
        string repositoryWithEntity = "IRepository" + "<" + ViewBag.Title + ">";
        string genericEntity = "T";
        string genericListEntity = "List<T>";
    }
    <div class="container">
        <div class="row p-1">
            <div class="col-4">
                <h4>@createDto</h4>
                @{
                    string createCode = "public class " + createDto + " {\n";
                    foreach (var item in Model.DataTransferObjectCreate)
                    {
                        foreach (var value in item.Values)
                        {
                            createCode += " \t" + value + "\n";
                        }
                    }
                    createCode += "}";
                }
                <textarea id="editor2">@createCode</textarea>
            </div>


            <div class="col-4">
                <h4>@updateDto</h4>
                @{
                    string updateCode = "public class " + updateDto + " {\n";
                    foreach (var item in Model.DataTransferObjectUpdateAndGet)
                    {
                        foreach (var value in item.Values)
                        {
                            updateCode += " \t" + value + "\n";
                        }
                    }
                    updateCode += "}";
                }
                <textarea id="editor3">@updateCode</textarea>
            </div>

            <div class="col-4">
                <h4>@getDto</h4>
                @{
                    string getCode = "public class " + getDto + " {\n";
                    foreach (var item in Model.DataTransferObjectUpdateAndGet)
                    {
                        foreach (var value in item.Values)
                        {
                            getCode += " \t" + value + "\n"; 
                        }
                    }
                    getCode += "}";
                }
                <textarea id="editor4">@getCode</textarea>
            </div>
    </div>

    <div class="row p-1">
        <div class="col-4">
            <h4>@interfaceRepository</h4>
            @{
                string interfaceRepoCode = "public interface " + interfaceRepository + " {\n";
                interfaceRepoCode += "\t" + "Task<" + genericEntity + "> GetAsync(int id); \n";
                interfaceRepoCode += "\t" + "Task<" + genericListEntity + "> GetAllAsync(); \n";
                interfaceRepoCode += "\t" + "Task CreateAsync(" + genericEntity + " entity); \n";
                interfaceRepoCode += "\t" + "Task DeleteAsync(int id)" + "\n";
                interfaceRepoCode += "\t" + "Task UpdateAsync(" + genericEntity + " entity); \n";
                interfaceRepoCode += "}";
            }
            <textarea id="editor5">@interfaceRepoCode</textarea>
        </div>
        <div class="col-4">
            <h4>@repository</h4>
            @{
                string repositoryClass = "public class " + repository + " : " + interfaceRepositoryEntity + "{\n";
                foreach (var item in Model.RepositoryList)
                {
                    foreach (var value in item.Values)
                    {
                        repositoryClass += value;
                    }
                }
                repositoryClass += "}"; 
            }
            <textarea id="editor6">@repositoryClass</textarea>
        </div>

        <div class="col-4">
            <h4>@interfaceRepositoryEntity</h4>
            @{
                string repositoryEntityClass = "public interface " + interfaceRepositoryEntity + " : " + repositoryWithEntity + "{\n";
                repositoryEntityClass += "}";
            }
            <textarea id="editor7">@repositoryEntityClass</textarea>
        </div>
     </div>

    <div class="row p-1" >
        <div class="col-6">
            <h4>@interfaceService</h4>
            @{
                string interfaceServiceClass = "public interface " + interfaceService + "{\n";
                interfaceServiceClass +="\t" + "Task<" + getDto + "> GetEntityAsync(int id);\n";
                interfaceServiceClass +="\t" + "Task<IEnumerable<" + getDto + "> GetAllEntitiesAsync();\n";
                interfaceServiceClass +="\t" + "Task CreateEntityAsync(" + createDto + "request);\n";
                interfaceServiceClass +="\t" + "Task DeleteEntityAsync(int id);\n";
                interfaceServiceClass +="\t" + "Task UpdateEntityAsync(" + updateDto + "request);\n";
                interfaceServiceClass += "}";
            }
            <textarea id="editor8">@interfaceServiceClass</textarea>
        </div>

        <div class="col-6">
            <h4>@service</h4>
            @{
                string interfaceClass = "public class " + service + " : " + interfaceService + "{\n";
                foreach (var item in Model.ServiceList)
                {
                    foreach (var value in item.Values)
                    {
                        interfaceClass += value;
                    }
                }
                interfaceClass += "}";
            }
            <textarea id="editor9">@interfaceClass</textarea>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var editor2 = CodeMirror.fromTextArea
            (document.getElementById("editor2"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
            theme: "dracula",
                indentUnit: 4,
                readOnly: true
            });
        var editor3 = CodeMirror.fromTextArea
            (document.getElementById("editor3"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
            });
        var editor4 = CodeMirror.fromTextArea
            (document.getElementById("editor4"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
        });
        var editor5 = CodeMirror.fromTextArea
            (document.getElementById("editor5"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
        });
        var editor6 = CodeMirror.fromTextArea
            (document.getElementById("editor6"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
        });
        var editor7 = CodeMirror.fromTextArea
            (document.getElementById("editor7"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
        });
        var editor8 = CodeMirror.fromTextArea
            (document.getElementById("editor8"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
        });
        var editor9 = CodeMirror.fromTextArea
            (document.getElementById("editor9"), {
                lineNumbers: true,
                mode: "text/x-csharp",
                matchBrackets: true,
                theme: "dracula",
                indentUnit: 4,
                readOnly: true
            });
        
    </script>
